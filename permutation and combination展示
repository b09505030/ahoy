#include <stdio.h>

void comb(int arr[], int data[], int start, int end, int index, int r);

void printcomb(int arr[], int n, int r)
{
    int data[r];
    comb(arr, data, 0, n - 1, 0, r);
}

void comb(int arr[], int data[], int start, int end, int index, int r)
{
    if (index == r)
    {
        for (int j = 0; j < r; j++)
            printf("%d ", data[j]);
        printf("\n");
        return;
    }

    for (int i = start; i <= end && end - i + 1 >= r - index; i++)
    {
        data[index] = arr[i];
        comb(arr, data, i + 1, end, index + 1, r);
    }
}

void printarray(int arr[], int size)
{
    int i, j;
    for (i = 0; i < size; i++)
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void swap(int *a, int *b)
{
    int temp;
    temp = *a;
    *a = *b;
    *b = temp;
}

void permutation(int *arr, int start, int end)
{
    if (start == end)
    {
        printarray(arr, end + 1);
        return;
    }
    int i;
    for (i = start; i <= end; i++)
    {
        swap((arr + i), (arr + start));
        permutation(arr, start + 1, end);
        swap((arr + i), (arr + start));
    }
}

int main()
{
    int size;
    printf("Enter the size of array :");
    scanf("%d", &size);
    int i;
    int arr[size];
    for (i = 0; i < size; i++)
        scanf("%d", &arr[i]);
    int r;
    printf("Enter the range of array for combination :");
    scanf("%d", &r);
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("------------------------------------------------\npermutation of size %d:\n",size);
    permutation(arr, 0, n - 1);
    printf("------------------------------------------------\ncombination of size %d in range %d:\n",size,r);
    printcomb(arr, n, r);
}
